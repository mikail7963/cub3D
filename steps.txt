
cub3D
-----
cub3D, Bir grafik projesidir ve Wolfenstein 3D oyunundan esinlenmiştir. 
Bu proje, Raycasting adı verilen bir grafik tekniğini kullanarak, 
labirent benzeri bir ortamda birinci şahıs bakış açısıyla gezilebilecek 
bir 3D görsel alan oluşturmanı sağlar.


raycasting:
Raycasting, bir oyuncunun bakış açısından sahneye doğru ışınlar (ray) göndererek, bu ışınların neyle çarpıştığını (duvar, nesne, vs.) hesaplayan bir algoritmadır.
- 3D görselliği 2D bir harita üzerinde simüle etmek için kullanılır.
- Oyuncunun görüş açısına göre duvarları, nesneleri, düşmanları ekrana çizer.

Örnek Senaryo (2D harita üzerinde):
- Harita: 2 boyutlu karelerden oluşur (duvar = 1, boşluk = 0).
- Oyuncu: Haritanın bir noktasında durur ve belirli bir yöne bakar.
- Algoritma: Oyuncunun görüş alanındaki her piksel için bir "ışın" yollar.
- Işın, ilk olarak hangi duvara çarparsa, o duvar çizilir.
- Bu işlem tüm ekran için yapılır, böylece 3D bir görünüm elde edilir.

Basit Raycasting Adımları:
- Oyuncunun pozisyonunu ve yönünü al.
- Ekrandaki her dikey çizgi için bir ışın gönder.
- Işın harita üzerinde ilerlerken bir duvara çarpana kadar hareket eder.
- Duvarın uzaklığına göre ekranın o noktasına bir çubuk (duvar) çizilir.
- Uzak duvarlar daha kısa çizilir → perspektif efekti oluşur.

Render:
Render (görüntüleme), bir sahnenin veya verinin işlenip görüntüye dönüştürülmesidir.



Door
----

1. Harita ve Parsing
.cub dosyasında D karakteri ekle (kapı için)
Parsing fonksiyonlarını D karakterini tanıyacak şekilde güncelle
Kapı texture'ları için yeni satırlar ekle (örn: DO door_texture.xpm)

2. Veri Yapısı
t_door structure oluştur (pozisyon, durum, texture)
Game structure'a kapı listesi ekle
Kapı durumları için enum tanımla (CLOSED, OPEN, OPENING, CLOSING)

3. Raycasting Güncellemesi
DDA algoritmasını kapıları detect edecek şekilde güncelle
Kapı durumuna göre collision hesapla
Kapı texture'ını render et

4. Etkileşim
Kapı açma tuşu ekle (örn: E)
Player-kapı mesafe kontrolü
Kapı durumunu toggle et
5. Collision
Movement fonksiyonlarını güncelle
Kapalı kapı = duvar, açık kapı = geçiş
6. Rendering
draw_wall() fonksiyonunu kapı için adapte et
Kapı texture'larını yükle ve çiz
